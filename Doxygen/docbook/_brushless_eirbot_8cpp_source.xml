<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__brushless_eirbot_8cpp_source" xml:lang="fr">
<title>BrushlessEirbot.cpp</title>
<indexterm><primary>lib/BrushlessEirbot/BrushlessEirbot.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__brushless_eirbot_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;BrushlessEirbot.hpp&quot;</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00002"/>00002 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00003"/>00003 <emphasis role="comment">/*********************************************************************************</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00004"/>00004 <emphasis role="comment">&#32;*&#32;Contructeur&#32;et&#32;destructeurs</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00005"/>00005 <emphasis role="comment">&#32;*********************************************************************************/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00006"/>00006 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00007"/>00007 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00008"/><link linkend="_class_brushless_eirbot_1a0587c7994656972670b76ce176489a06">00008</link> <link linkend="_class_brushless_eirbot_1a0587c7994656972670b76ce176489a06">BrushlessEirbot::BrushlessEirbot</link>(position&#32;position,&#32;<emphasis role="keywordtype">double</emphasis>&#32;wheelDiameterMm)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_serial-&gt;isatty()&#32;&lt;&#32;0){
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_serial;&#32;<emphasis role="comment">//&#32;pas&#32;de&#32;debug</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00012"/>00012 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;_positionMotor&#32;=&#32;position;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;_stateController&#32;=&#32;enable;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00015"/>00015 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialisation&#32;des&#32;structures</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;hall&#32;=&#32;{.h1=0,&#32;.h2=0,&#32;.h3=0,&#32;.h123=0,&#32;.prev_h123=0,&#32;.tickS=0,&#32;.tickP=0};
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;PWM&#32;=&#32;{.aH=1,&#32;.aL=0,&#32;.bH=1,&#32;.bL=0,&#32;.cH=0,&#32;.cL=0,&#32;.sens=clockwise};
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;data&#32;=&#32;{.speed_ref=0,&#32;.speed=0,&#32;.error=0,&#32;.prev_error=0,&#32;.cmd=0,&#32;.prev_cmd=0,&#32;.cmdsat=10,&#32;.prev_cmdsat=0};
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00020"/>00020 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;_tickerController.attach(callback(<emphasis role="keyword">this</emphasis>,&#32;&amp;BrushlessEirbot::_routineController),&#32;TeUsController);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;_tickerHallSecure.attach(callback(<emphasis role="keyword">this</emphasis>,&#32;&amp;BrushlessEirbot::_routineHallSecure),&#32;TeUsHallSecure);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00023"/>00023 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_positionMotor&#32;==&#32;Left)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Configuration&#32;des&#32;Hall&#32;Sensors</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinHall_1&#32;=&#32;PB_2;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinHall_2&#32;=&#32;PB_5;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinHall_3&#32;=&#32;PB_6;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00029"/>00029 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Configuration&#32;des&#32;Current&#32;Sensors</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinCurrent_A&#32;=&#32;PC_0;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinCurrent_B&#32;=&#32;PC_1;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinCurrent_C&#32;=&#32;PC_2;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00034"/>00034 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Configuration&#32;du&#32;timer&#32;1</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MX_TIM1_Init();
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifndef&#32;timerPWM</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;timerPWM&#32;TIM1</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00039"/>00039 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Configuration&#32;des&#32;Current&#32;Sensors</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinPWM_AH&#32;=&#32;PC_6;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinPWM_AL&#32;=&#32;PA_7;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinPWM_BH&#32;=&#32;PC_7;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinPWM_BL&#32;=&#32;PB_14;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinPWM_CH&#32;=&#32;PC_8;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinPWM_CL&#32;=&#32;PB_15;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_positionMotor&#32;==&#32;Right)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Configuration&#32;des&#32;Hall&#32;Sensors</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinHall_1&#32;=&#32;PB_7;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinHall_2&#32;=&#32;PB_8;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinHall_3&#32;=&#32;PB_9;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00053"/>00053 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Configuration&#32;des&#32;Current&#32;Sensors</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinCurrent_A&#32;=&#32;PC_3;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinCurrent_B&#32;=&#32;PC_4;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_pinCurrent_C&#32;=&#32;PC_5;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00058"/>00058 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Configuration&#32;du&#32;timer&#32;8</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MX_TIM8_Init();
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00061"/>00061 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifndef&#32;timerPWM</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00062"/>00062 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#define&#32;timerPWM&#32;TIM8</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00065"/>00065 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;HALL_1&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;InterruptIn(_pinHall_1,&#32;PullNone);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;HALL_2&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;InterruptIn(_pinHall_2,&#32;PullNone);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;HALL_3&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;InterruptIn(_pinHall_3,&#32;PullNone);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;HALL_1-&gt;rise(callback(<emphasis role="keyword">this</emphasis>,&#32;&amp;BrushlessEirbot::hallInterrupt));
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;HALL_2-&gt;rise(callback(<emphasis role="keyword">this</emphasis>,&#32;&amp;BrushlessEirbot::hallInterrupt));
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;HALL_3-&gt;rise(callback(<emphasis role="keyword">this</emphasis>,&#32;&amp;BrushlessEirbot::hallInterrupt));
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;HALL_1-&gt;fall(callback(<emphasis role="keyword">this</emphasis>,&#32;&amp;BrushlessEirbot::hallInterrupt));
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;HALL_2-&gt;fall(callback(<emphasis role="keyword">this</emphasis>,&#32;&amp;BrushlessEirbot::hallInterrupt));
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;HALL_3-&gt;fall(callback(<emphasis role="keyword">this</emphasis>,&#32;&amp;BrushlessEirbot::hallInterrupt));
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00075"/>00075 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;Current_A&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnalogIn(_pinCurrent_A);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;Current_B&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnalogIn(_pinCurrent_B);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;Current_C&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;AnalogIn(_pinCurrent_C);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00079"/>00079 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00080"/>00080 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00081"/><link linkend="_class_brushless_eirbot_1a8fc9dcffc3622ea55ec65d855bf428fc">00081</link> <link linkend="_class_brushless_eirbot_1a0587c7994656972670b76ce176489a06">BrushlessEirbot::BrushlessEirbot</link>(BufferedSerial&#32;*pc,&#32;position&#32;position_motor,&#32;<emphasis role="keywordtype">double</emphasis>&#32;wheelDiameterMm)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;_serial&#32;=&#32;pc;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<link linkend="_class_brushless_eirbot">BrushlessEirbot</link>(position_motor,&#32;wheelDiameterMm);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00084"/>00084 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00085"/>00085 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00086"/>00086 BrushlessEirbot::~BrushlessEirbot()&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;_tickerController.detach();
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;_tickerController.detach();
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;HALL_1;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;HALL_2;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;HALL_3;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;Current_A;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;Current_B;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;Current_C;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_serial;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00096"/>00096 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00097"/>00097 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00098"/>00098 <emphasis role="comment">/*********************************************************************************</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00099"/>00099 <emphasis role="comment">&#32;*&#32;Méthodes&#32;primitives</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00100"/>00100 <emphasis role="comment">&#32;*********************************************************************************/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00101"/>00101 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00102"/>00102 <emphasis role="keywordtype">void</emphasis>&#32;BrushlessEirbot::setDutyCycle()&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00104"/>00104 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Impose&#32;le&#32;rapport&#32;cyclique&#32;pour&#32;régler&#32;l&apos;intensité&#32;magnétique&#32;d&apos;accroche&#32;du&#32;rotor.</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00105"/>00105 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((data.cmdsat&#32;&gt;=&#32;0)&#32;&amp;&amp;&#32;(data.cmdsat&#32;&lt;=&#32;DC_MAX))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;clockwise</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.sens&#32;=&#32;clockwise;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR1&#32;=&#32;25;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR2&#32;=&#32;35;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR3&#32;=&#32;45;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((data.cmdsat&#32;&gt;=&#32;DC_MIN)&#32;&amp;&amp;&#32;(data.cmdsat&#32;&lt;&#32;0))&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;anti&#32;clockwise</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.sens&#32;=&#32;antiClockwise;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR1&#32;=&#32;-data.cmdsat;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR2&#32;=&#32;-data.cmdsat;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR3&#32;=&#32;-data.cmdsat;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//error&#32;state&#32;-.&#32;PWM&#32;off</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.sens&#32;=&#32;clockwise;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR1&#32;=&#32;0;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR2&#32;=&#32;0;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR3&#32;=&#32;0;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00125"/>00125 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00126"/>00126 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00127"/>00127 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00128"/>00128 <emphasis role="keywordtype">void</emphasis>&#32;BrushlessEirbot::decodeHall()&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00130"/>00130 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Décode&#32;les&#32;interruptions&#32;sur&#32;les&#32;capteurs&#32;à&#32;effet&#32;Hall&#32;pour&#32;prévoir&#32;la&#32;prochaine&#32;séquence&#32;de&#32;commutation&#32;des&#32;demi-pont.</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00131"/>00131 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;hall.h123=&#32;(hall.h1&lt;&lt;2)&#32;|&#32;(hall.h2&lt;&lt;1)&#32;|&#32;hall.h3;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;motor&#32;sense&#32;reading</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PWM.sens&#32;==&#32;clockwise)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;clockwise</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.aH&#32;=&#32;(hall.h1)&#32;&#32;&amp;&amp;&#32;(!hall.h2);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.aL&#32;=&#32;(!hall.h1)&#32;&amp;&amp;&#32;(hall.h2);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.bH&#32;=&#32;(hall.h2)&#32;&#32;&amp;&amp;&#32;(!hall.h3);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.bL&#32;=&#32;(!hall.h2)&#32;&amp;&amp;&#32;(hall.h3);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.cH&#32;=&#32;(!hall.h1)&#32;&amp;&amp;&#32;(hall.h3);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.cL&#32;=&#32;(hall.h1)&#32;&#32;&amp;&amp;&#32;(!hall.h3);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PWM.sens&#32;==&#32;antiClockwise)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;anti-clockwise</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.aH&#32;=&#32;(!hall.h1)&#32;&amp;&amp;&#32;(hall.h2);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.aL&#32;=&#32;(hall.h1)&#32;&#32;&amp;&amp;&#32;(!hall.h2);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.bH&#32;=&#32;(!hall.h2)&#32;&amp;&amp;&#32;(hall.h3);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.bL&#32;=&#32;(hall.h2)&#32;&#32;&amp;&amp;&#32;(!hall.h3);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.cH&#32;=&#32;(hall.h1)&#32;&#32;&amp;&amp;&#32;(!hall.h3);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.cL&#32;=&#32;(!hall.h1)&#32;&amp;&amp;&#32;(hall.h3);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00148"/>00148 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Count&#32;ticks</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hall.h123&#32;!=&#32;hall.prev_h123)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//for&#32;sense&#32;sign&#32;reading</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;101&#32;-&gt;&#32;100&#32;-&gt;&#32;110&#32;-&gt;&#32;010&#32;-&gt;&#32;011&#32;-&gt;&#32;001&#32;clockwise</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(hall.h123)
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0b001:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hall.prev_h123&#32;==&#32;0b011)&#32;(hall.tickS)++;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;clockwise</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;(hall.tickS)--;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;anti&#32;clockwise</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0b010:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hall.prev_h123&#32;==&#32;0b110)&#32;(hall.tickS)++;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;(hall.tickS)--;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0b011:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hall.prev_h123&#32;==&#32;0b010)&#32;(hall.tickS)++;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;(hall.tickS)--;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0b100:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hall.prev_h123&#32;==&#32;0b101)&#32;(hall.tickS)++;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;(hall.tickS)--;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0b101:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hall.prev_h123&#32;==&#32;0b001)&#32;(hall.tickS)++;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;(hall.tickS)--;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0b110:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hall.prev_h123&#32;==&#32;0b100)&#32;(hall.tickS)++;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;(hall.tickS)--;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00182"/>00182 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;hall.prev_h123&#32;=&#32;hall.h123;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00184"/>00184 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00185"/>00185 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00186"/>00186 <emphasis role="keywordtype">void</emphasis>&#32;BrushlessEirbot::updateOutput()&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PWM.aH)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//CC1E=1</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;|=&#32;TIM_CCER_CC1E;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//CC1E=0</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;&amp;=&#32;~(TIM_CCER_CC1E);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00192"/>00192 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PWM.aL)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//CC1NE=1</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;|=&#32;TIM_CCER_CC1NE;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//CC1NE=0</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;&amp;=&#32;~(TIM_CCER_CC1NE);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00198"/>00198 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PWM.bH)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;|=&#32;TIM_CCER_CC2E;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;&amp;=&#32;~(TIM_CCER_CC2E);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00204"/>00204 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PWM.bL)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;|=&#32;TIM_CCER_CC2NE;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;&amp;=&#32;~(TIM_CCER_CC2NE);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00210"/>00210 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PWM.cH)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;|=&#32;TIM_CCER_CC3E;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;&amp;=&#32;~(TIM_CCER_CC3E);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00216"/>00216 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PWM.cL)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;|=&#32;TIM_CCER_CC3NE;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCER&#32;&amp;=&#32;~(TIM_CCER_CC3NE);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00222"/>00222 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00223"/>00223 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00224"/>00224 int16_t&#32;BrushlessEirbot::calculateSpeed()&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00226"/>00226 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Calculate&#32;motor&#32;speed&#32;using&#32;hall&#32;effect&#32;sensor</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00227"/>00227 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;called&#32;every&#32;10ms&#32;(100Hz)</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00228"/>00228 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;return&#32;measurement_L.speed&#32;in&#32;tick/s</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00229"/>00229 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;resolution&#32;:&#32;1/p&#32;mechanical&#32;turn&#32;&#32;-&gt;&#32;48ticks&#32;for&#32;1turn</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00230"/>00230 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hall.tickS&#32;&gt;&#32;240)
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(int16_t)&#32;MAX_SPEED;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hall.tickS&#32;&lt;&#32;-240)
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(int16_t)&#32;MIN_SPEED;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;100&#32;*&#32;hall.tickS;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00237"/>00237 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00238"/>00238 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00239"/>00239 <emphasis role="keywordtype">void</emphasis>&#32;BrushlessEirbot::writeCommand()&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00241"/>00241 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Ecrit&#32;la&#32;séquence&#32;de&#32;commutation&#32;donnée&#32;par&#32;les&#32;effets&#32;Hall.</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00242"/>00242 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((data.cmdsat&#32;&gt;=&#32;0)&#32;&amp;&amp;&#32;(data.cmdsat&#32;&lt;=&#32;DC_MAX))&#32;{&#32;&#32;<emphasis role="comment">//clockwise</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.sens&#32;=&#32;clockwise;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR1&#32;=&#32;data.cmdsat;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR2&#32;=&#32;data.cmdsat;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR3&#32;=&#32;data.cmdsat;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((data.cmdsat&#32;&gt;=&#32;DC_MIN)&#32;&amp;&amp;&#32;(data.cmdsat&#32;&lt;&#32;0))&#32;{&#32;&#32;<emphasis role="comment">//anti&#32;clockwise</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.sens&#32;=&#32;antiClockwise;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR1&#32;=&#32;-data.cmdsat;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR2&#32;=&#32;-data.cmdsat;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR3&#32;=&#32;-data.cmdsat;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">//error&#32;state&#32;--&gt;&#32;PWM&#32;off</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PWM.sens&#32;=&#32;clockwise;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR1&#32;=&#32;0;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR2&#32;=&#32;0;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timerPWM-&gt;CCR3&#32;=&#32;0;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00259"/>00259 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00260"/>00260 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00261"/>00261 <emphasis role="comment">/*********************************************************************************</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00262"/>00262 <emphasis role="comment">&#32;*&#32;Cadencement&#32;des&#32;méthodes&#32;primaires</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00263"/>00263 <emphasis role="comment">&#32;*********************************************************************************/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00264"/>00264 <emphasis role="keywordtype">void</emphasis>&#32;BrushlessEirbot::hallInterrupt()&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00265"/>00265 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00266"/>00266 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00267"/>00267 <emphasis role="keywordtype">void</emphasis>&#32;BrushlessEirbot::_routineHallSecure()&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00269"/>00269 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Vérifie&#32;si&#32;une&#32;interruption&#32;n&apos;a&#32;pas&#32;été&#32;ratée,&#32;pour&#32;éviter&#32;le&#32;court&#32;circuit&#32;sur&#32;une&#32;phase&#32;du&#32;moteur</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00270"/>00270 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO&#32;Verifier&#32;la&#32;bonne&#32;cohérence</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00272"/>00272 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00273"/>00273 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00274"/>00274 <emphasis role="keywordtype">void</emphasis>&#32;BrushlessEirbot::_routineController(){
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00276"/>00276 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Calcul&#32;la&#32;vitesse&#32;et&#32;gère&#32;l&apos;asservissement&#32;de&#32;la&#32;vitesse&#32;du&#32;moteur</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00277"/>00277 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00278"/>00278 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00279"/>00279 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00280"/>00280 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00281"/>00281 <emphasis role="comment">/*********************************************************************************</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00282"/>00282 <emphasis role="comment">&#32;*&#32;Méthodes&#32;publiques</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00283"/>00283 <emphasis role="comment">&#32;*********************************************************************************/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00284"/>00284 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00285"/>00285 <emphasis role="keywordtype">void</emphasis>&#32;BrushlessEirbot::setVelocity(unitVelocity&#32;unit,&#32;<emphasis role="keywordtype">double</emphasis>&#32;consigne)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00287"/>00287 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Retourne&#32;la&#32;vitesse&#32;du&#32;moteur&#32;dans&#32;l&apos;unité&#32;renseignée</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00288"/>00288 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(unit)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;rad_s:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;tick_s:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;mm_s:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00297"/>00297 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00298"/>00298 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00299"/>00299 <emphasis role="keywordtype">double</emphasis>&#32;BrushlessEirbot::getVelocity(unitVelocity&#32;unit)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(unit)&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;rad_s:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;to&#32;rad/s</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;tick_s:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;to&#32;tick/s</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;mm_s:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;convert&#32;to&#32;mm/s</emphasis>
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(MAXFLOAT);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;}
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00314"/>00314 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00315"/>00315 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00316"/>00316 <emphasis role="keywordtype">void</emphasis>&#32;BrushlessEirbot::displayPinOut()&#32;{
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;std::string&#32;buffer(<emphasis role="stringliteral">&quot;PMW&#32;on&#32;half-bridges&#32;:\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinPWM_AH)&#32;+&#32;<emphasis role="stringliteral">&quot;\t&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinPWM_AL)&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinPWM_BH)&#32;+&#32;<emphasis role="stringliteral">&quot;\t&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinPWM_BL)&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinPWM_CH)&#32;+&#32;<emphasis role="stringliteral">&quot;\t&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinPWM_CL)&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;buffer.append(<emphasis role="stringliteral">&quot;Hall&#32;sensors&#32;:\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinHall_1)&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinHall_2)&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinHall_3)&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;buffer.append(<emphasis role="stringliteral">&quot;Currents&#32;sensors&#32;:\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinCurrent_A)&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinCurrent_B)&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;buffer.append(to_string(_pinCurrent_C)&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00332"/>00332 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;_serial-&gt;write(buffer.c_str(),&#32;buffer.length());
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00334"/>00334 }
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00335"/>00335 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00336"/>00336 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00337"/>00337 
<anchor xml:id="__brushless_eirbot_8cpp_source_1l00338"/>00338 
</programlisting></section>
