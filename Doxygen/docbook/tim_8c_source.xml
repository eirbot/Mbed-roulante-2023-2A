<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tim_8c_source" xml:lang="fr">
<title>tim.c</title>
<indexterm><primary>lib/BrushlessEirbot/tim.c</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="_tim_8c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;tim.h&quot;</emphasis>
<anchor xml:id="_tim_8c_source_1l00002"/>00002 
<anchor xml:id="_tim_8c_source_1l00003"/>00003 <emphasis role="keywordtype">void</emphasis>&#32;Error_Handler(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_tim_8c_source_1l00004"/>00004 &#32;&#32;&#32;&#32;__disable_irq();
<anchor xml:id="_tim_8c_source_1l00005"/>00005 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(1)&#32;{
<anchor xml:id="_tim_8c_source_1l00006"/>00006 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00007"/>00007 }
<anchor xml:id="_tim_8c_source_1l00008"/>00008 
<anchor xml:id="_tim_8c_source_1l00009"/>00009 TIM_HandleTypeDef&#32;htim1;
<anchor xml:id="_tim_8c_source_1l00010"/>00010 TIM_HandleTypeDef&#32;htim8;
<anchor xml:id="_tim_8c_source_1l00011"/>00011 
<anchor xml:id="_tim_8c_source_1l00012"/>00012 <emphasis role="comment">/*&#32;TIM1&#32;init&#32;function&#32;*/</emphasis>
<anchor xml:id="_tim_8c_source_1l00013"/>00013 <emphasis role="keywordtype">void</emphasis>&#32;MX_TIM1_Init(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_tim_8c_source_1l00014"/>00014 &#32;&#32;&#32;&#32;TIM_ClockConfigTypeDef&#32;sClockSourceConfig&#32;=&#32;{0};
<anchor xml:id="_tim_8c_source_1l00015"/>00015 &#32;&#32;&#32;&#32;TIM_MasterConfigTypeDef&#32;sMasterConfig&#32;=&#32;{0};
<anchor xml:id="_tim_8c_source_1l00016"/>00016 &#32;&#32;&#32;&#32;TIM_OC_InitTypeDef&#32;sConfigOC&#32;=&#32;{0};
<anchor xml:id="_tim_8c_source_1l00017"/>00017 &#32;&#32;&#32;&#32;TIM_BreakDeadTimeConfigTypeDef&#32;sBreakDeadTimeConfig&#32;=&#32;{0};
<anchor xml:id="_tim_8c_source_1l00018"/>00018 
<anchor xml:id="_tim_8c_source_1l00019"/>00019 &#32;&#32;&#32;&#32;htim1.Instance&#32;=&#32;TIM1;
<anchor xml:id="_tim_8c_source_1l00020"/>00020 &#32;&#32;&#32;&#32;htim1.Init.Prescaler&#32;=&#32;59&#32;-&#32;1;&#32;<emphasis role="comment">//&#32;avec&#32;comme&#32;clock&#32;de&#32;référence&#32;180MHz</emphasis>
<anchor xml:id="_tim_8c_source_1l00021"/>00021 &#32;&#32;&#32;&#32;htim1.Init.CounterMode&#32;=&#32;TIM_COUNTERMODE_UP;
<anchor xml:id="_tim_8c_source_1l00022"/>00022 &#32;&#32;&#32;&#32;htim1.Init.Period&#32;=&#32;100&#32;-&#32;1;
<anchor xml:id="_tim_8c_source_1l00023"/>00023 &#32;&#32;&#32;&#32;htim1.Init.ClockDivision&#32;=&#32;TIM_CLOCKDIVISION_DIV1;
<anchor xml:id="_tim_8c_source_1l00024"/>00024 &#32;&#32;&#32;&#32;htim1.Init.RepetitionCounter&#32;=&#32;0;
<anchor xml:id="_tim_8c_source_1l00025"/>00025 &#32;&#32;&#32;&#32;htim1.Init.AutoReloadPreload&#32;=&#32;TIM_AUTORELOAD_PRELOAD_DISABLE;
<anchor xml:id="_tim_8c_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_Base_Init(&amp;htim1)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00028"/>00028 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;sClockSourceConfig.ClockSource&#32;=&#32;TIM_CLOCKSOURCE_INTERNAL;
<anchor xml:id="_tim_8c_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_ConfigClockSource(&amp;htim1,&#32;&amp;sClockSourceConfig)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_PWM_Init(&amp;htim1)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;sMasterConfig.MasterOutputTrigger&#32;=&#32;TIM_TRGO_RESET;
<anchor xml:id="_tim_8c_source_1l00037"/>00037 &#32;&#32;&#32;&#32;sMasterConfig.MasterSlaveMode&#32;=&#32;TIM_MASTERSLAVEMODE_DISABLE;
<anchor xml:id="_tim_8c_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIMEx_MasterConfigSynchronization(&amp;htim1,&#32;&amp;sMasterConfig)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00040"/>00040 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00041"/>00041 &#32;&#32;&#32;&#32;sConfigOC.OCMode&#32;=&#32;TIM_OCMODE_PWM1;
<anchor xml:id="_tim_8c_source_1l00042"/>00042 &#32;&#32;&#32;&#32;sConfigOC.Pulse&#32;=&#32;0;
<anchor xml:id="_tim_8c_source_1l00043"/>00043 &#32;&#32;&#32;&#32;sConfigOC.OCPolarity&#32;=&#32;TIM_OCPOLARITY_HIGH;
<anchor xml:id="_tim_8c_source_1l00044"/>00044 &#32;&#32;&#32;&#32;sConfigOC.OCNPolarity&#32;=&#32;TIM_OCNPOLARITY_HIGH;
<anchor xml:id="_tim_8c_source_1l00045"/>00045 &#32;&#32;&#32;&#32;sConfigOC.OCFastMode&#32;=&#32;TIM_OCFAST_DISABLE;
<anchor xml:id="_tim_8c_source_1l00046"/>00046 &#32;&#32;&#32;&#32;sConfigOC.OCIdleState&#32;=&#32;TIM_OCIDLESTATE_RESET;
<anchor xml:id="_tim_8c_source_1l00047"/>00047 &#32;&#32;&#32;&#32;sConfigOC.OCNIdleState&#32;=&#32;TIM_OCNIDLESTATE_RESET;
<anchor xml:id="_tim_8c_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_PWM_ConfigChannel(&amp;htim1,&#32;&amp;sConfigOC,&#32;TIM_CHANNEL_1)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_PWM_ConfigChannel(&amp;htim1,&#32;&amp;sConfigOC,&#32;TIM_CHANNEL_2)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00053"/>00053 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_PWM_ConfigChannel(&amp;htim1,&#32;&amp;sConfigOC,&#32;TIM_CHANNEL_3)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.OffStateRunMode&#32;=&#32;TIM_OSSR_ENABLE;
<anchor xml:id="_tim_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.OffStateIDLEMode&#32;=&#32;TIM_OSSI_DISABLE;
<anchor xml:id="_tim_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.LockLevel&#32;=&#32;TIM_LOCKLEVEL_OFF;
<anchor xml:id="_tim_8c_source_1l00060"/>00060 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.DeadTime&#32;=&#32;2;
<anchor xml:id="_tim_8c_source_1l00061"/>00061 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.BreakState&#32;=&#32;TIM_BREAK_DISABLE;
<anchor xml:id="_tim_8c_source_1l00062"/>00062 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.BreakPolarity&#32;=&#32;TIM_BREAKPOLARITY_HIGH;
<anchor xml:id="_tim_8c_source_1l00063"/>00063 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.AutomaticOutput&#32;=&#32;TIM_AUTOMATICOUTPUT_DISABLE;
<anchor xml:id="_tim_8c_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIMEx_ConfigBreakDeadTime(&amp;htim1,&#32;&amp;sBreakDeadTimeConfig)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00067"/>00067 
<anchor xml:id="_tim_8c_source_1l00068"/>00068 &#32;&#32;&#32;&#32;HAL_TIM_MspPostInit(&amp;htim1);
<anchor xml:id="_tim_8c_source_1l00069"/>00069 
<anchor xml:id="_tim_8c_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="comment">//PWM&#32;START&#32;TIMER1</emphasis>
<anchor xml:id="_tim_8c_source_1l00071"/>00071 &#32;&#32;&#32;&#32;HAL_TIM_PWM_Start(&amp;htim1,&#32;TIM_CHANNEL_1);
<anchor xml:id="_tim_8c_source_1l00072"/>00072 &#32;&#32;&#32;&#32;HAL_TIMEx_PWMN_Start(&amp;htim1,&#32;TIM_CHANNEL_1);
<anchor xml:id="_tim_8c_source_1l00073"/>00073 &#32;&#32;&#32;&#32;HAL_TIM_PWM_Start(&amp;htim1,&#32;TIM_CHANNEL_2);
<anchor xml:id="_tim_8c_source_1l00074"/>00074 &#32;&#32;&#32;&#32;HAL_TIMEx_PWMN_Start(&amp;htim1,&#32;TIM_CHANNEL_2);
<anchor xml:id="_tim_8c_source_1l00075"/>00075 &#32;&#32;&#32;&#32;HAL_TIM_PWM_Start(&amp;htim1,&#32;TIM_CHANNEL_3);
<anchor xml:id="_tim_8c_source_1l00076"/>00076 &#32;&#32;&#32;&#32;HAL_TIMEx_PWMN_Start(&amp;htim1,&#32;TIM_CHANNEL_3);
<anchor xml:id="_tim_8c_source_1l00077"/>00077 
<anchor xml:id="_tim_8c_source_1l00078"/>00078 }
<anchor xml:id="_tim_8c_source_1l00079"/>00079 
<anchor xml:id="_tim_8c_source_1l00080"/>00080 <emphasis role="comment">/*&#32;TIM8&#32;init&#32;function&#32;*/</emphasis>
<anchor xml:id="_tim_8c_source_1l00081"/>00081 <emphasis role="keywordtype">void</emphasis>&#32;MX_TIM8_Init(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_tim_8c_source_1l00082"/>00082 &#32;&#32;&#32;&#32;TIM_ClockConfigTypeDef&#32;sClockSourceConfig&#32;=&#32;{0};
<anchor xml:id="_tim_8c_source_1l00083"/>00083 &#32;&#32;&#32;&#32;TIM_MasterConfigTypeDef&#32;sMasterConfig&#32;=&#32;{0};
<anchor xml:id="_tim_8c_source_1l00084"/>00084 &#32;&#32;&#32;&#32;TIM_OC_InitTypeDef&#32;sConfigOC&#32;=&#32;{0};
<anchor xml:id="_tim_8c_source_1l00085"/>00085 &#32;&#32;&#32;&#32;TIM_BreakDeadTimeConfigTypeDef&#32;sBreakDeadTimeConfig&#32;=&#32;{0};
<anchor xml:id="_tim_8c_source_1l00086"/>00086 
<anchor xml:id="_tim_8c_source_1l00087"/>00087 &#32;&#32;&#32;&#32;htim8.Instance&#32;=&#32;TIM8;
<anchor xml:id="_tim_8c_source_1l00088"/>00088 &#32;&#32;&#32;&#32;htim8.Init.Prescaler&#32;=&#32;59&#32;-&#32;1;&#32;<emphasis role="comment">//&#32;avec&#32;comme&#32;clock&#32;de&#32;référence&#32;180MHz</emphasis>
<anchor xml:id="_tim_8c_source_1l00089"/>00089 &#32;&#32;&#32;&#32;htim8.Init.CounterMode&#32;=&#32;TIM_COUNTERMODE_UP;
<anchor xml:id="_tim_8c_source_1l00090"/>00090 &#32;&#32;&#32;&#32;htim8.Init.Period&#32;=&#32;100&#32;-&#32;1;
<anchor xml:id="_tim_8c_source_1l00091"/>00091 &#32;&#32;&#32;&#32;htim8.Init.ClockDivision&#32;=&#32;TIM_CLOCKDIVISION_DIV1;
<anchor xml:id="_tim_8c_source_1l00092"/>00092 &#32;&#32;&#32;&#32;htim8.Init.RepetitionCounter&#32;=&#32;0;
<anchor xml:id="_tim_8c_source_1l00093"/>00093 &#32;&#32;&#32;&#32;htim8.Init.AutoReloadPreload&#32;=&#32;TIM_AUTORELOAD_PRELOAD_DISABLE;
<anchor xml:id="_tim_8c_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_Base_Init(&amp;htim8)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00096"/>00096 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00097"/>00097 &#32;&#32;&#32;&#32;sClockSourceConfig.ClockSource&#32;=&#32;TIM_CLOCKSOURCE_INTERNAL;
<anchor xml:id="_tim_8c_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_ConfigClockSource(&amp;htim8,&#32;&amp;sClockSourceConfig)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00100"/>00100 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_OC_Init(&amp;htim8)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00104"/>00104 &#32;&#32;&#32;&#32;sMasterConfig.MasterOutputTrigger&#32;=&#32;TIM_TRGO_RESET;
<anchor xml:id="_tim_8c_source_1l00105"/>00105 &#32;&#32;&#32;&#32;sMasterConfig.MasterSlaveMode&#32;=&#32;TIM_MASTERSLAVEMODE_DISABLE;
<anchor xml:id="_tim_8c_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIMEx_MasterConfigSynchronization(&amp;htim8,&#32;&amp;sMasterConfig)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00108"/>00108 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00109"/>00109 &#32;&#32;&#32;&#32;sConfigOC.OCMode&#32;=&#32;TIM_OCMODE_TIMING;
<anchor xml:id="_tim_8c_source_1l00110"/>00110 &#32;&#32;&#32;&#32;sConfigOC.Pulse&#32;=&#32;0;
<anchor xml:id="_tim_8c_source_1l00111"/>00111 &#32;&#32;&#32;&#32;sConfigOC.OCPolarity&#32;=&#32;TIM_OCPOLARITY_HIGH;
<anchor xml:id="_tim_8c_source_1l00112"/>00112 &#32;&#32;&#32;&#32;sConfigOC.OCNPolarity&#32;=&#32;TIM_OCNPOLARITY_HIGH;
<anchor xml:id="_tim_8c_source_1l00113"/>00113 &#32;&#32;&#32;&#32;sConfigOC.OCFastMode&#32;=&#32;TIM_OCFAST_DISABLE;
<anchor xml:id="_tim_8c_source_1l00114"/>00114 &#32;&#32;&#32;&#32;sConfigOC.OCIdleState&#32;=&#32;TIM_OCIDLESTATE_RESET;
<anchor xml:id="_tim_8c_source_1l00115"/>00115 &#32;&#32;&#32;&#32;sConfigOC.OCNIdleState&#32;=&#32;TIM_OCNIDLESTATE_RESET;
<anchor xml:id="_tim_8c_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_OC_ConfigChannel(&amp;htim8,&#32;&amp;sConfigOC,&#32;TIM_CHANNEL_1)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00118"/>00118 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_OC_ConfigChannel(&amp;htim8,&#32;&amp;sConfigOC,&#32;TIM_CHANNEL_2)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00121"/>00121 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIM_OC_ConfigChannel(&amp;htim8,&#32;&amp;sConfigOC,&#32;TIM_CHANNEL_3)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00124"/>00124 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00125"/>00125 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.OffStateRunMode&#32;=&#32;TIM_OSSR_DISABLE;
<anchor xml:id="_tim_8c_source_1l00126"/>00126 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.OffStateIDLEMode&#32;=&#32;TIM_OSSI_DISABLE;
<anchor xml:id="_tim_8c_source_1l00127"/>00127 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.LockLevel&#32;=&#32;TIM_LOCKLEVEL_OFF;
<anchor xml:id="_tim_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.DeadTime&#32;=&#32;0;
<anchor xml:id="_tim_8c_source_1l00129"/>00129 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.BreakState&#32;=&#32;TIM_BREAK_DISABLE;
<anchor xml:id="_tim_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.BreakPolarity&#32;=&#32;TIM_BREAKPOLARITY_HIGH;
<anchor xml:id="_tim_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;sBreakDeadTimeConfig.AutomaticOutput&#32;=&#32;TIM_AUTOMATICOUTPUT_DISABLE;
<anchor xml:id="_tim_8c_source_1l00132"/>00132 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(HAL_TIMEx_ConfigBreakDeadTime(&amp;htim8,&#32;&amp;sBreakDeadTimeConfig)&#32;!=&#32;HAL_OK)&#32;{
<anchor xml:id="_tim_8c_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Error_Handler();
<anchor xml:id="_tim_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00135"/>00135 
<anchor xml:id="_tim_8c_source_1l00136"/>00136 &#32;&#32;&#32;&#32;HAL_TIM_MspPostInit(&amp;htim8);
<anchor xml:id="_tim_8c_source_1l00137"/>00137 
<anchor xml:id="_tim_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="comment">//PWM&#32;START&#32;TIMER8</emphasis>
<anchor xml:id="_tim_8c_source_1l00139"/>00139 &#32;&#32;&#32;&#32;HAL_TIM_PWM_Start(&amp;htim8,&#32;TIM_CHANNEL_1);
<anchor xml:id="_tim_8c_source_1l00140"/>00140 &#32;&#32;&#32;&#32;HAL_TIMEx_PWMN_Start(&amp;htim8,&#32;TIM_CHANNEL_1);
<anchor xml:id="_tim_8c_source_1l00141"/>00141 &#32;&#32;&#32;&#32;HAL_TIM_PWM_Start(&amp;htim8,&#32;TIM_CHANNEL_2);
<anchor xml:id="_tim_8c_source_1l00142"/>00142 &#32;&#32;&#32;&#32;HAL_TIMEx_PWMN_Start(&amp;htim8,&#32;TIM_CHANNEL_2);
<anchor xml:id="_tim_8c_source_1l00143"/>00143 &#32;&#32;&#32;&#32;HAL_TIM_PWM_Start(&amp;htim8,&#32;TIM_CHANNEL_3);
<anchor xml:id="_tim_8c_source_1l00144"/>00144 &#32;&#32;&#32;&#32;HAL_TIMEx_PWMN_Start(&amp;htim8,&#32;TIM_CHANNEL_3);
<anchor xml:id="_tim_8c_source_1l00145"/>00145 }
<anchor xml:id="_tim_8c_source_1l00146"/>00146 
<anchor xml:id="_tim_8c_source_1l00147"/>00147 <emphasis role="keywordtype">void</emphasis>&#32;HAL_TIM_Base_MspInit(TIM_HandleTypeDef&#32;*tim_baseHandle)&#32;{
<anchor xml:id="_tim_8c_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tim_baseHandle-&gt;Instance&#32;==&#32;TIM1)&#32;{
<anchor xml:id="_tim_8c_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;TIM1&#32;clock&#32;enable&#32;*/</emphasis>
<anchor xml:id="_tim_8c_source_1l00150"/>00150 
<anchor xml:id="_tim_8c_source_1l00151"/>00151 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tim_baseHandle-&gt;Instance&#32;==&#32;TIM8)&#32;{
<anchor xml:id="_tim_8c_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;TIM8&#32;clock&#32;enable&#32;*/</emphasis>
<anchor xml:id="_tim_8c_source_1l00153"/>00153 
<anchor xml:id="_tim_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00155"/>00155 }
<anchor xml:id="_tim_8c_source_1l00156"/>00156 
<anchor xml:id="_tim_8c_source_1l00157"/>00157 <emphasis role="keywordtype">void</emphasis>&#32;HAL_TIM_MspPostInit(TIM_HandleTypeDef&#32;*timHandle)&#32;{
<anchor xml:id="_tim_8c_source_1l00158"/>00158 &#32;&#32;&#32;&#32;GPIO_InitTypeDef&#32;GPIO_InitStruct&#32;=&#32;{0};
<anchor xml:id="_tim_8c_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(timHandle-&gt;Instance&#32;==&#32;TIM1)&#32;{
<anchor xml:id="_tim_8c_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__HAL_RCC_GPIOB_CLK_ENABLE();
<anchor xml:id="_tim_8c_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__HAL_RCC_GPIOA_CLK_ENABLE();
<anchor xml:id="_tim_8c_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__HAL_RCC_TIM1_CLK_ENABLE();&#32;<emphasis role="comment">//&#32;Tudor</emphasis>
<anchor xml:id="_tim_8c_source_1l00171"/>00171 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pin&#32;=&#32;BL_L_Pin&#32;|&#32;CL_L_Pin&#32;|&#32;AL_L_Pin;
<anchor xml:id="_tim_8c_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Mode&#32;=&#32;GPIO_MODE_AF_PP;
<anchor xml:id="_tim_8c_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pull&#32;=&#32;GPIO_PULLDOWN;
<anchor xml:id="_tim_8c_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Speed&#32;=&#32;GPIO_SPEED_FREQ_LOW;
<anchor xml:id="_tim_8c_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Alternate&#32;=&#32;GPIO_AF1_TIM1;
<anchor xml:id="_tim_8c_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_GPIO_Init(GPIOB,&#32;&amp;GPIO_InitStruct);
<anchor xml:id="_tim_8c_source_1l00177"/>00177 
<anchor xml:id="_tim_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pin&#32;=&#32;AH_L_Pin&#32;|&#32;BH_L_Pin&#32;|&#32;CH_L_Pin;
<anchor xml:id="_tim_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Mode&#32;=&#32;GPIO_MODE_AF_PP;
<anchor xml:id="_tim_8c_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pull&#32;=&#32;GPIO_PULLDOWN;
<anchor xml:id="_tim_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Speed&#32;=&#32;GPIO_SPEED_FREQ_LOW;
<anchor xml:id="_tim_8c_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Alternate&#32;=&#32;GPIO_AF1_TIM1;
<anchor xml:id="_tim_8c_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_GPIO_Init(GPIOA,&#32;&amp;GPIO_InitStruct);
<anchor xml:id="_tim_8c_source_1l00184"/>00184 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(timHandle-&gt;Instance&#32;==&#32;TIM8)&#32;{
<anchor xml:id="_tim_8c_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__HAL_RCC_GPIOA_CLK_ENABLE();
<anchor xml:id="_tim_8c_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__HAL_RCC_GPIOB_CLK_ENABLE();
<anchor xml:id="_tim_8c_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__HAL_RCC_GPIOC_CLK_ENABLE();
<anchor xml:id="_tim_8c_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__HAL_RCC_TIM8_CLK_ENABLE();&#32;<emphasis role="comment">//&#32;Tudor</emphasis>
<anchor xml:id="_tim_8c_source_1l00198"/>00198 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pin&#32;=&#32;AL_R_Pin;
<anchor xml:id="_tim_8c_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Mode&#32;=&#32;GPIO_MODE_AF_PP;
<anchor xml:id="_tim_8c_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pull&#32;=&#32;GPIO_PULLDOWN;
<anchor xml:id="_tim_8c_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Speed&#32;=&#32;GPIO_SPEED_FREQ_LOW;
<anchor xml:id="_tim_8c_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Alternate&#32;=&#32;GPIO_AF3_TIM8;
<anchor xml:id="_tim_8c_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_GPIO_Init(AL_R_GPIO_Port,&#32;&amp;GPIO_InitStruct);
<anchor xml:id="_tim_8c_source_1l00204"/>00204 
<anchor xml:id="_tim_8c_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pin&#32;=&#32;BL_R_Pin&#32;|&#32;CL_R_Pin;
<anchor xml:id="_tim_8c_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Mode&#32;=&#32;GPIO_MODE_AF_PP;
<anchor xml:id="_tim_8c_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pull&#32;=&#32;GPIO_PULLDOWN;
<anchor xml:id="_tim_8c_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Speed&#32;=&#32;GPIO_SPEED_FREQ_LOW;
<anchor xml:id="_tim_8c_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Alternate&#32;=&#32;GPIO_AF3_TIM8;
<anchor xml:id="_tim_8c_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_GPIO_Init(GPIOB,&#32;&amp;GPIO_InitStruct);
<anchor xml:id="_tim_8c_source_1l00211"/>00211 
<anchor xml:id="_tim_8c_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pin&#32;=&#32;AH_R_Pin&#32;|&#32;BH_R_Pin&#32;|&#32;CH_R_Pin;
<anchor xml:id="_tim_8c_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Mode&#32;=&#32;GPIO_MODE_AF_PP;
<anchor xml:id="_tim_8c_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Pull&#32;=&#32;GPIO_PULLDOWN;
<anchor xml:id="_tim_8c_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Speed&#32;=&#32;GPIO_SPEED_FREQ_LOW;
<anchor xml:id="_tim_8c_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_InitStruct.Alternate&#32;=&#32;GPIO_AF3_TIM8;
<anchor xml:id="_tim_8c_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_GPIO_Init(GPIOC,&#32;&amp;GPIO_InitStruct);
<anchor xml:id="_tim_8c_source_1l00218"/>00218 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00219"/>00219 
<anchor xml:id="_tim_8c_source_1l00220"/>00220 }
<anchor xml:id="_tim_8c_source_1l00221"/>00221 
<anchor xml:id="_tim_8c_source_1l00222"/>00222 <emphasis role="keywordtype">void</emphasis>&#32;HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef&#32;*tim_baseHandle)&#32;{
<anchor xml:id="_tim_8c_source_1l00223"/>00223 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tim_baseHandle-&gt;Instance&#32;==&#32;TIM1)&#32;{
<anchor xml:id="_tim_8c_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Peripheral&#32;clock&#32;disable&#32;*/</emphasis>
<anchor xml:id="_tim_8c_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__HAL_RCC_TIM1_CLK_DISABLE();
<anchor xml:id="_tim_8c_source_1l00226"/>00226 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tim_baseHandle-&gt;Instance&#32;==&#32;TIM8)&#32;{
<anchor xml:id="_tim_8c_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Peripheral&#32;clock&#32;disable&#32;*/</emphasis>
<anchor xml:id="_tim_8c_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__HAL_RCC_TIM8_CLK_DISABLE();
<anchor xml:id="_tim_8c_source_1l00229"/>00229 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tim_8c_source_1l00230"/>00230 }
</programlisting></section>
