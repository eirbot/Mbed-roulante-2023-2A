<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__robot_8cpp_source" xml:lang="fr">
<title>Robot.cpp</title>
<indexterm><primary>lib/Robot/Robot.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__robot_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;Robot.hpp&quot;</emphasis>
<anchor xml:id="__robot_8cpp_source_1l00002"/>00002 
<anchor xml:id="__robot_8cpp_source_1l00003"/>00003 <emphasis role="keywordtype">void</emphasis>&#32;Robot::trapeze_naif(<emphasis role="keywordtype">float</emphasis>&#32;d){
<anchor xml:id="__robot_8cpp_source_1l00004"/>00004 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(EN_trapeze&#32;==&#32;<emphasis role="keyword">true</emphasis>){
<anchor xml:id="__robot_8cpp_source_1l00005"/>00005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Tc_float&#32;=&#32;0.;&#32;
<anchor xml:id="__robot_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;T1_float&#32;=&#32;0.;&#32;
<anchor xml:id="__robot_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;T_float&#32;=&#32;0.;&#32;
<anchor xml:id="__robot_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;validation&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__robot_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;v_pourcent&#32;=&#32;1;&#32;<emphasis role="comment">//&#32;réduit&#32;virtuellement&#32;V_max&#32;en&#32;cas&#32;de&#32;courte&#32;distance</emphasis>
<anchor xml:id="__robot_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;d_pourcent&#32;=&#32;0.6;&#32;<emphasis role="comment">//&#32;pseudo&#32;constant</emphasis>
<anchor xml:id="__robot_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;acceleration&#32;=&#32;A_max;
<anchor xml:id="__robot_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;vitesse&#32;=&#32;V_max;
<anchor xml:id="__robot_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Oubli&#32;que&#32;tu&#32;n&apos;as&#32;aucune&#32;chance&#32;et&#32;fonce</emphasis>
<anchor xml:id="__robot_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tc_float&#32;=&#32;(d&#32;*&#32;d_pourcent)&#32;/&#32;(vitesse&#32;*&#32;v_pourcent);
<anchor xml:id="__robot_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T1_float&#32;=&#32;acceleration&#32;/&#32;vitesse;
<anchor xml:id="__robot_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T_float&#32;=&#32;2*T1_float&#32;+&#32;Tc_float;
<anchor xml:id="__robot_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;validation&#32;=&#32;(acceleration&#32;&lt;=&#32;A_max)&#32;&amp;&amp;&#32;(vitesse&#32;&lt;=&#32;V_max)&#32;&amp;&amp;&#32;(Tc_float&#32;&lt;&#32;0);
<anchor xml:id="__robot_8cpp_source_1l00018"/>00018 
<anchor xml:id="__robot_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Si&#32;ça&#32;ne&#32;passe&#32;pas&#32;:</emphasis>
<anchor xml:id="__robot_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(validation){
<anchor xml:id="__robot_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;réduction&#32;de&#32;la&#32;vitesse&#32;maximale&#32;et&#32;de&#32;la&#32;distance&#32;à&#32;faire&#32;à&#32;vitesse&#32;constante</emphasis>
<anchor xml:id="__robot_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d_pourcent&#32;&lt;=&#32;0.6&#32;&amp;&amp;&#32;d_pourcent&#32;&gt;=&#32;0.3){
<anchor xml:id="__robot_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;d_pourcent&#32;-=&#32;0.1;
<anchor xml:id="__robot_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__robot_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d_pourcent&#32;==&#32;0.3&#32;&amp;&amp;&#32;v_pourcent&#32;&gt;=&#32;0.2){
<anchor xml:id="__robot_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;v_pourcent&#32;-=&#32;0.1;
<anchor xml:id="__robot_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__robot_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;recalcule</emphasis>
<anchor xml:id="__robot_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tc&#32;=&#32;(d&#32;*&#32;d_pourcent)&#32;/&#32;(vitesse&#32;*&#32;v_pourcent);
<anchor xml:id="__robot_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T1&#32;=&#32;acceleration&#32;/&#32;(vitesse&#32;*&#32;v_pourcent);
<anchor xml:id="__robot_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;=&#32;2*T1&#32;+&#32;Tc;
<anchor xml:id="__robot_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__robot_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;validation&#32;=&#32;(acceleration&#32;&lt;=&#32;A_max)&#32;&amp;&amp;&#32;(vitesse&#32;&lt;=&#32;V_max)&#32;&amp;&amp;&#32;(Tc&#32;&gt;&#32;0);
<anchor xml:id="__robot_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__robot_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T1&#32;=&#32;(uint32_t)&#32;(T1_float/1e6);
<anchor xml:id="__robot_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tc&#32;=&#32;(uint32_t)&#32;(Tc_float/1e6);
<anchor xml:id="__robot_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;=&#32;(uint32_t)&#32;(T_float/1e6);
<anchor xml:id="__robot_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Vc&#32;=&#32;vitesse&#32;*&#32;v_pourcent;
<anchor xml:id="__robot_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;}
<anchor xml:id="__robot_8cpp_source_1l00040"/>00040 }
<anchor xml:id="__robot_8cpp_source_1l00041"/>00041 
<anchor xml:id="__robot_8cpp_source_1l00042"/>00042 <emphasis role="keywordtype">void</emphasis>&#32;Robot::commande(){
<anchor xml:id="__robot_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;
<anchor xml:id="__robot_8cpp_source_1l00044"/>00044 }
</programlisting></section>
