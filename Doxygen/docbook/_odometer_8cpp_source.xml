<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__odometer_8cpp_source" xml:lang="fr">
<title>Odometer.cpp</title>
<indexterm><primary>lib/Odometer/Odometer.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__odometer_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;Odometer.hpp&quot;</emphasis>
<anchor xml:id="__odometer_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
<anchor xml:id="__odometer_8cpp_source_1l00003"/>00003 
<anchor xml:id="__odometer_8cpp_source_1l00004"/>00004 <emphasis role="comment">//&#32;Constructeur&#32;:</emphasis>
<anchor xml:id="__odometer_8cpp_source_1l00005"/>00005 Odometer::Odometer(){
<anchor xml:id="__odometer_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;r&#32;=&#32;0.;
<anchor xml:id="__odometer_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;theta&#32;=&#32;M_PI_2;
<anchor xml:id="__odometer_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;pol2cart(r,&#32;theta);
<anchor xml:id="__odometer_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;tick_md&#32;=&#32;0;
<anchor xml:id="__odometer_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;tick_mg&#32;=&#32;0;
<anchor xml:id="__odometer_8cpp_source_1l00011"/>00011 }
<anchor xml:id="__odometer_8cpp_source_1l00012"/>00012 
<anchor xml:id="__odometer_8cpp_source_1l00013"/>00013 <emphasis role="comment">//&#32;Get</emphasis>
<anchor xml:id="__odometer_8cpp_source_1l00014"/>00014 <emphasis role="keywordtype">float</emphasis>&#32;Odometer::get_x(){
<anchor xml:id="__odometer_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;
<anchor xml:id="__odometer_8cpp_source_1l00016"/>00016 }
<anchor xml:id="__odometer_8cpp_source_1l00017"/>00017 <emphasis role="keywordtype">float</emphasis>&#32;Odometer::get_y(){
<anchor xml:id="__odometer_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y;
<anchor xml:id="__odometer_8cpp_source_1l00019"/>00019 }
<anchor xml:id="__odometer_8cpp_source_1l00020"/>00020 <emphasis role="keywordtype">float</emphasis>&#32;Odometer::get_r(){
<anchor xml:id="__odometer_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__odometer_8cpp_source_1l00022"/>00022 }
<anchor xml:id="__odometer_8cpp_source_1l00023"/>00023 <emphasis role="keywordtype">float</emphasis>&#32;Odometer::get_theta(){
<anchor xml:id="__odometer_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;theta;
<anchor xml:id="__odometer_8cpp_source_1l00025"/>00025 }
<anchor xml:id="__odometer_8cpp_source_1l00026"/>00026 <emphasis role="keywordtype">int</emphasis>&#32;Odometer::get_tick_md(){
<anchor xml:id="__odometer_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tick_md;
<anchor xml:id="__odometer_8cpp_source_1l00028"/>00028 }
<anchor xml:id="__odometer_8cpp_source_1l00029"/>00029 <emphasis role="keywordtype">int</emphasis>&#32;Odometer::get_tick_mg(){
<anchor xml:id="__odometer_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tick_mg;
<anchor xml:id="__odometer_8cpp_source_1l00031"/>00031 }
<anchor xml:id="__odometer_8cpp_source_1l00032"/>00032 
<anchor xml:id="__odometer_8cpp_source_1l00033"/>00033 <emphasis role="comment">//&#32;Set</emphasis>
<anchor xml:id="__odometer_8cpp_source_1l00034"/>00034 <emphasis role="keywordtype">void</emphasis>&#32;Odometer::set_x(<emphasis role="keywordtype">float</emphasis>&#32;new_x){
<anchor xml:id="__odometer_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;x&#32;=&#32;new_x;
<anchor xml:id="__odometer_8cpp_source_1l00036"/>00036 }
<anchor xml:id="__odometer_8cpp_source_1l00037"/>00037 <emphasis role="keywordtype">void</emphasis>&#32;Odometer::set_y(<emphasis role="keywordtype">float</emphasis>&#32;new_y){
<anchor xml:id="__odometer_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;y&#32;=&#32;new_y;
<anchor xml:id="__odometer_8cpp_source_1l00039"/>00039 }
<anchor xml:id="__odometer_8cpp_source_1l00040"/>00040 <emphasis role="keywordtype">void</emphasis>&#32;Odometer::set_r(<emphasis role="keywordtype">float</emphasis>&#32;new_r){
<anchor xml:id="__odometer_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;r&#32;=&#32;new_r;
<anchor xml:id="__odometer_8cpp_source_1l00042"/>00042 }
<anchor xml:id="__odometer_8cpp_source_1l00043"/>00043 <emphasis role="keywordtype">void</emphasis>&#32;Odometer::set_theta(<emphasis role="keywordtype">float</emphasis>&#32;new_theta){
<anchor xml:id="__odometer_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;theta&#32;=&#32;new_theta;
<anchor xml:id="__odometer_8cpp_source_1l00045"/>00045 }
<anchor xml:id="__odometer_8cpp_source_1l00046"/>00046 <emphasis role="keywordtype">void</emphasis>&#32;Odometer::set_tick_md(<emphasis role="keywordtype">int</emphasis>&#32;new_tick_md){
<anchor xml:id="__odometer_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;tick_md&#32;=&#32;new_tick_md;
<anchor xml:id="__odometer_8cpp_source_1l00048"/>00048 }
<anchor xml:id="__odometer_8cpp_source_1l00049"/>00049 <emphasis role="keywordtype">void</emphasis>&#32;Odometer::set_tick_mg(<emphasis role="keywordtype">int</emphasis>&#32;new_tick_mg){
<anchor xml:id="__odometer_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;tick_mg&#32;=&#32;new_tick_mg;
<anchor xml:id="__odometer_8cpp_source_1l00051"/>00051 }
<anchor xml:id="__odometer_8cpp_source_1l00052"/>00052 
<anchor xml:id="__odometer_8cpp_source_1l00053"/>00053 <emphasis role="comment">//&#32;Fonctions</emphasis>
<anchor xml:id="__odometer_8cpp_source_1l00054"/>00054 <emphasis role="keywordtype">void</emphasis>&#32;Odometer::cart2pol(<emphasis role="keywordtype">float</emphasis>&#32;x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y){
<anchor xml:id="__odometer_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;r&#32;=&#32;sqrt(x&#32;*&#32;x&#32;+&#32;y&#32;*&#32;y);
<anchor xml:id="__odometer_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;!=&#32;0){&#32;
<anchor xml:id="__odometer_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;theta&#32;=&#32;atan(y/x);
<anchor xml:id="__odometer_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__odometer_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;theta&#32;=&#32;M_PI_2;
<anchor xml:id="__odometer_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;}
<anchor xml:id="__odometer_8cpp_source_1l00061"/>00061 }
<anchor xml:id="__odometer_8cpp_source_1l00062"/>00062 <emphasis role="keywordtype">void</emphasis>&#32;Odometer::pol2cart(<emphasis role="keywordtype">float</emphasis>&#32;r,&#32;<emphasis role="keywordtype">float</emphasis>&#32;theta){
<anchor xml:id="__odometer_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;x&#32;=&#32;r&#32;*&#32;cos(theta);
<anchor xml:id="__odometer_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;y&#32;=&#32;r&#32;*&#32;sin(theta);
<anchor xml:id="__odometer_8cpp_source_1l00065"/>00065 }
<anchor xml:id="__odometer_8cpp_source_1l00066"/>00066 
<anchor xml:id="__odometer_8cpp_source_1l00067"/>00067 <emphasis role="keywordtype">void</emphasis>&#32;Odometer::fonction_periodique(){
<anchor xml:id="__odometer_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fixe_tick_md&#32;=&#32;tick_md;
<anchor xml:id="__odometer_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fixe_tick_mg&#32;=&#32;tick_mg;
<anchor xml:id="__odometer_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;set_tick_md(0);
<anchor xml:id="__odometer_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;set_tick_mg(0);
<anchor xml:id="__odometer_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;r&#32;=&#32;0.5&#32;*&#32;diametre_roue&#32;*&#32;delta_theta&#32;*&#32;(fixe_tick_md&#32;+&#32;fixe_tick_mg);&#32;<emphasis role="comment">//&#32;m</emphasis>
<anchor xml:id="__odometer_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;r&#32;=&#32;r&#32;/&#32;1000.;
<anchor xml:id="__odometer_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;theta&#32;=&#32;theta&#32;+&#32;delta_theta&#32;*&#32;(fixe_tick_md&#32;+&#32;fixe_tick_mg);&#32;<emphasis role="comment">//&#32;rad&#32;</emphasis>
<anchor xml:id="__odometer_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;pol2cart(r,&#32;theta);
<anchor xml:id="__odometer_8cpp_source_1l00076"/>00076 }
</programlisting></section>
